--// Load Fluent UI
local url = "https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"
local Library
local ok, res = pcall(function() return loadstring(game:HttpGet(url))() end)
if ok and res then Library = res else warn("❌ Không thể load Fluent UI."); return end

--// Window
local MainWindow = Library:CreateWindow({
    Title = "BIBEE |",
    SubTitle = "tiktok:_ivaa_ltnmh21",
    TabWidth = 120,
    Size = UDim2.fromOffset(520, 300),
    Acrylic = true,
    Theme = "Black",
    MinimizeKey = Enum.KeyCode.F6
})

local Tabs = {}
Tabs.main = MainWindow:AddTab({ Title = "Game" })
Tabs.teleport = MainWindow:AddTab({ Title = "Teleport" })
Tabs.esp = MainWindow:AddTab({ Title = "ESP" })

--// Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local VirtualUser = game:GetService("VirtualUser")
local player = Players.LocalPlayer

--==================================================
-- Anti-AFK
--==================================================
local afkEnabled = false

local function antiAfkAction()
    VirtualUser:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
    task.wait(1)
    VirtualUser:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
end

Tabs.main:AddToggle("AntiAFK_Toggle", {
    Title = "Anti AFK",
    Default = false,
    Callback = function(state)
        afkEnabled = state
        if state then
            player.Idled:Connect(function()
                if afkEnabled then antiAfkAction() end
            end)
            Library:Notify({ Title = "Anti AFK", Content = "✅ Đã bật chống AFK.", Duration = 4 })
        else
            Library:Notify({ Title = "Anti AFK", Content = "❌ Anti-AFK đã tắt.", Duration = 4 })
        end
    end
})

task.spawn(function()
    while true do
        if afkEnabled then
            task.wait(1170)
            antiAfkAction()
        else
            task.wait(1)
        end
    end
end)

--==================================================
-- Speed Hack
--==================================================
local speedEnabled = false
local speedValue = 32
local defaultSpeed = 16
local rsConn, charConn

local function getHumanoid()
    local char = player.Character
    if not char then return nil end
    return char:FindFirstChildOfClass("Humanoid")
end

local function startSpeedLoop()
    if rsConn then rsConn:Disconnect() rsConn = nil end
    rsConn = RunService.RenderStepped:Connect(function()
        if speedEnabled then
            local hum = getHumanoid()
            if hum and hum.WalkSpeed ~= speedValue then
                hum.WalkSpeed = speedValue
            end
        end
    end)
end

local function stopSpeedLoop()
    if rsConn then rsConn:Disconnect() rsConn = nil end
end

Tabs.main:AddSlider("SpeedSlider", {
    Title = "Tốc độ chạy",
    Default = speedValue, Min = 16, Max = 200, Rounding = 0,
    Callback = function(v)
        speedValue = v
    end
})

Tabs.main:AddToggle("Speed_Toggle", {
    Title = "Bật Speed Hack",
    Default = false,
    Callback = function(state)
        speedEnabled = state
        if state then
            if charConn then charConn:Disconnect() charConn = nil end
            charConn = player.CharacterAdded:Connect(function(char)
                local hum = char:WaitForChild("Humanoid", 10)
                if hum and speedEnabled then hum.WalkSpeed = speedValue end
            end)
            startSpeedLoop()
            local hum = getHumanoid()
            if hum then hum.WalkSpeed = speedValue end
            Library:Notify({ Title = "Speed Hack", Content = "✅ Đã bật ("..speedValue.." WalkSpeed).", Duration = 4 })
        else
            stopSpeedLoop()
            if charConn then charConn:Disconnect() charConn = nil end
            local hum = getHumanoid()
            if hum then hum.WalkSpeed = defaultSpeed end
            Library:Notify({ Title = "Speed Hack", Content = "❌ Đã tắt (trả về "..defaultSpeed..").", Duration = 4 })
        end
    end
})

--==================================================
-- Teleport Tab
--==================================================
local selectedPlayer

local function getPlayerList()
    local list = {}
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= player then table.insert(list, p.Name) end
    end
    return list
end

local playerDropdown = Tabs.teleport:AddDropdown("PlayerList", {
    Title = "Chọn Player để Teleport",
    Values = getPlayerList(),
    Multi = false,
    Default = nil,
    Callback = function(value) selectedPlayer = value end
})

Tabs.teleport:AddButton({
    Title = "Teleport tới Player",
    Description = "Dịch chuyển đến vị trí player đã chọn",
    Callback = function()
        if selectedPlayer then
            local target = Players:FindFirstChild(selectedPlayer)
            if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                player.Character:MoveTo(target.Character.HumanoidRootPart.Position + Vector3.new(0,3,0))
                Library:Notify({ Title = "Teleport", Content = "✅ Đã dịch chuyển tới "..selectedPlayer, Duration = 4 })
            else
                Library:Notify({ Title = "Teleport", Content = "⚠️ Không tìm thấy nhân vật của "..selectedPlayer, Duration = 4 })
            end
        else
            Library:Notify({ Title = "Teleport", Content = "⚠️ Bạn chưa chọn Player!", Duration = 4 })
        end
    end
})

Players.PlayerAdded:Connect(function() playerDropdown:SetValues(getPlayerList()) end)
Players.PlayerRemoving:Connect(function() playerDropdown:SetValues(getPlayerList()) end)

--==================================================
-- ESP Tab
--==================================================
local espEnabled = false
local espBoxes = {}

local function removeESP(player)
    if espBoxes[player] then
        espBoxes[player]:Destroy()
        espBoxes[player] = nil
    end
end

local function createESP(player)
    removeESP(player)
    local char = player.Character
    if not char then return end
    local root = char:FindFirstChild("HumanoidRootPart")
    if not root then return end

    local billboard = Instance.new("BillboardGui")
    billboard.Name = "ESPBox"
    billboard.Adornee = root
    billboard.Size = UDim2.new(0,100,0,40)
    billboard.AlwaysOnTop = true

    local label = Instance.new("TextLabel")
    label.Text = player.Name
    label.Size = UDim2.new(1,0,1,0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.new(1,0,0)
    label.TextScaled = true
    label.Parent = billboard

    billboard.Parent = game:GetService("CoreGui")
    espBoxes[player] = billboard
end

local function setupESPForPlayer(player)
    player.CharacterAdded:Connect(function()
        if espEnabled then
            task.wait(0.1)
            createESP(player)
        end
    end)
end

Tabs.esp:AddToggle("ESP_Toggle", {
    Title = "Bật ESP",
    Default = false,
    Callback = function(state)
        espEnabled = state
        if state then
            for _, p in pairs(Players:GetPlayers()) do
                if p ~= player then
                    createESP(p)
                    setupESPForPlayer(p)
                end
            end
            Players.PlayerAdded:Connect(function(p)
                if p ~= player then
                    createESP(p)
                    setupESPForPlayer(p)
                end
            end)
            Players.PlayerRemoving:Connect(function(p)
                removeESP(p)
            end)
            Library:Notify({ Title = "ESP", Content = "✅ ESP đã bật", Duration = 4 })
        else
            for _, p in pairs(Players:GetPlayers()) do
                removeESP(p)
            end
            Library:Notify({ Title = "ESP", Content = "❌ ESP đã tắt", Duration = 4 })
        end
    end
})

--==================================================
-- Toggle Auto Tap (thay Auto Click)
--==================================================
local autoTapScriptLoaded = false

Tabs.main:AddToggle("RunAutoTap_Toggle", {
    Title = "Chạy Auto Tap",
    Default = false,
    Callback = function(state)
        if state then
            if not autoTapScriptLoaded then
                -- --- START AUTO TAP SCRIPT ---
                local UIS=game:GetService("UserInputService")
                local VIE=game:GetService("VirtualInputManager")
                local PLR=game.Players.LocalPlayer
                local GUI=Instance.new("ScreenGui",PLR:WaitForChild("PlayerGui"))
                GUI.ResetOnSpawn=false

                local Frame=Instance.new("Frame",GUI)
                Frame.Size=UDim2.new(0,260,0,280)
                Frame.Position=UDim2.new(0.5,-130,0.3,-90)
                Frame.BackgroundColor3=Color3.fromRGB(30,30,30)
                Frame.BorderSizePixel=0
                Frame.Active=true
                Frame.Draggable=true
                Instance.new("UICorner",Frame)

                local UIPadding=Instance.new("UIPadding",Frame)
                UIPadding.PaddingTop=UDim.new(0,10)
                UIPadding.PaddingLeft=UDim.new(0,10)
                UIPadding.PaddingRight=UDim.new(0,10)
                local UIList=Instance.new("UIListLayout",Frame)
                UIList.SortOrder=Enum.SortOrder.LayoutOrder
                UIList.Padding=UDim.new(0,8)

                local Title=Instance.new("TextLabel",Frame)
                Title.Size=UDim2.new(1,0,0,25)
                Title.BackgroundTransparency=1
                Title.Text="Auto Tap Menu"
                Title.TextColor3=Color3.new(1,1,1)
                Title.Font=Enum.Font.GothamBold
                Title.TextSize=18

                local CooldownBox=Instance.new("TextBox",Frame)
                CooldownBox.Size=UDim2.new(1,0,0,30)
                CooldownBox.PlaceholderText="Cooldown (s)"
                CooldownBox.Text="0.1"
                CooldownBox.BackgroundColor3=Color3.fromRGB(50,50,50)
                CooldownBox.TextColor3=Color3.new(1,1,1)
                CooldownBox.ClearTextOnFocus=false
                CooldownBox.Font=Enum.Font.Gotham
                CooldownBox.TextSize=14
                Instance.new("UICorner",CooldownBox)

                local ChooseBtn=Instance.new("TextButton",Frame)
                ChooseBtn.Size=UDim2.new(1,0,0,30)
                ChooseBtn.Text="Choose Tap Position"
                ChooseBtn.BackgroundColor3=Color3.fromRGB(60,60,60)
                ChooseBtn.TextColor3=Color3.new(1,1,1)
                ChooseBtn.Font=Enum.Font.Gotham
                ChooseBtn.TextSize=14
                Instance.new("UICorner",ChooseBtn)

                local PosLabel=Instance.new("TextLabel",Frame)
                PosLabel.Size=UDim2.new(1,0,0,20)
                PosLabel.Text="Position: Center"
                PosLabel.BackgroundTransparency=1
                PosLabel.TextColor3=Color3.new(1,1,1)
                PosLabel.Font=Enum.Font.Gotham
                PosLabel.TextSize=12
                PosLabel.TextXAlignment=Enum.TextXAlignment.Left

                local ToggleBtn=Instance.new("TextButton",Frame)
                ToggleBtn.Size=UDim2.new(1,0,0,35)
                ToggleBtn.Text="AutoTap: OFF"
                ToggleBtn.BackgroundColor3=Color3.fromRGB(100,30,30)
                ToggleBtn.TextColor3=Color3.new(1,1,1)
                ToggleBtn.Font=Enum.Font.GothamBold
                ToggleBtn.TextSize=16
                Instance.new("UICorner",ToggleBtn)

                -- Variables
                local TOG=false
                local RUN=false
                local selecting=false
                local tapPos=Vector2.new(workspace.CurrentCamera.ViewportSize.X/2, workspace.CurrentCamera.ViewportSize.Y/2)

                -- FOV Indicator
                local FOV=Instance.new("Frame",GUI)
                FOV.Size=UDim2.new(0,20,0,20)
                FOV.AnchorPoint=Vector2.new(0.5,0.5)
                FOV.Position=UDim2.new(0, tapPos.X, 0, tapPos.Y)
                FOV.BackgroundTransparency=1
                local Stroke=Instance.new("UIStroke",FOV)
                Stroke.Thickness=1.5
                Stroke.Transparency=0
                Stroke.ApplyStrokeMode=Enum.ApplyStrokeMode.Border
                Instance.new("UICorner",FOV)

                local Inner1=FOV:Clone()
                Inner1.Size=UDim2.new(0,10,0,10)
                Inner1.Parent=FOV
                Inner1.Position=UDim2.new(0.5,0,0.5,0)
                Inner1:GetChildren()[1].Thickness=1

                local PlusH=Instance.new("Frame",FOV)
                PlusH.Size=UDim2.new(0,10,0,1)
                PlusH.AnchorPoint=Vector2.new(0.5,0.5)
                PlusH.Position=UDim2.new(0.5,0,0.5,0)
                PlusH.BackgroundColor3=Color3.new(1,1,1)

                local PlusV=Instance.new("Frame",FOV)
                PlusV.Size=UDim2.new(0,1,0,10)
                PlusV.AnchorPoint=Vector2.new(0.5,0.5)
                PlusV.Position=UDim2.new(0.5,0,0.5,0)
                PlusV.BackgroundColor3=Color3.new(1,1,1)

                -- RGB Cycle
                task.spawn(function()
                    local h=0
                    while true do
                        h=(h+0.01)%1
                        local col=Color3.fromHSV(h,1,1)
                        Stroke.Color=col
                        Inner1:GetChildren()[1].Color=col
                        PlusH.BackgroundColor3=col
                        PlusV.BackgroundColor3=col
                        task.wait(0.05)
                    end
                end)

                -- Tap Logic
                local function updateLabel()
                    PosLabel.Text="Position: ("..math.floor(tapPos.X)..", "..math.floor(tapPos.Y)..")"
                end

                local function stop()
                    TOG=false
                    RUN=false
                    ToggleBtn.Text="AutoTap: OFF"
                    ToggleBtn.BackgroundColor3=Color3.fromRGB(100,30,30)
                end

                local function startLoop()
                    RUN=true
                    coroutine.wrap(function()
                        while RUN and TOG do
                            local x,y=tapPos.X,tapPos.Y+50
                            FOV.Position=UDim2.new(0, tapPos.X, 0, tapPos.Y)
                            VIE:SendMouseButtonEvent(x,y,0,true,game,false)
                            VIE:SendMouseButtonEvent(x,y,0,false,game,false)
                            local cd=tonumber(CooldownBox.Text) or 0.1
                            task.wait(math.clamp(cd,0.05,5))
                        end
                    end)()
                end

                ChooseBtn.MouseButton1Click:Connect(function()
                    if not selecting then
                        selecting=true
                        ChooseBtn.Text="Click anywhere..."
                    end
                end)

                UIS.InputBegan:Connect(function(input,gp)
                    if selecting and (input.UserInputType==Enum.UserInputType.MouseButton1 or input.UserInputType==Enum.UserInputType.Touch) then
                        tapPos=input.Position
                        updateLabel()
                        ChooseBtn.Text="Choose Tap Position"
                        selecting=false
                    end
                end)

                ToggleBtn.MouseButton1Click:Connect(function()
                    TOG=not TOG
                    if TOG then
                        ToggleBtn.Text="AutoTap: ON"
                        ToggleBtn.BackgroundColor3=Color3.fromRGB(30,100,30)
                        startLoop()
                    else
                        stop()
                    end
                end)

                local function monitorDeath()
                    local char=PLR.Character or PLR.CharacterAdded:Wait()
                    local hum=char:WaitForChild("Humanoid")
                    hum.Died:Connect(stop)
                end

                monitorDeath()
                PLR.CharacterAdded:Connect(monitorDeath)
                updateLabel()

                autoTapScriptLoaded = true
            end

            Library:Notify({
                Title = "Auto Tap",
                Content = "✅ Script Auto Tap đã tải và sẵn sàng",
                Duration = 4
            })
        else
            Library:Notify({
                Title = "Auto Tap",
                Content = "❌ Script Auto Tap toggle tắt",
                Duration = 4
            })
        end
    end
})
